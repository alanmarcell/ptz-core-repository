{"version":3,"sources":["../dist-es6/BaseRepository.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","BaseRepository","db","collectionName","collection","entity","getDbCollection","replaceOne","_id","id","upsert","ops","query","findOne","ids","$in","find","toArray","options"],"mappings":";;;;;;;;;;AAAA,IAAIA,YAAa,aAAQ,UAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAAO,KAAKD,MAAMA,IAAIE,OAAV,CAAL,EAAyB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACvD,iBAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAE,gBAAI;AAAEC,qBAAKN,UAAUO,IAAV,CAAeF,KAAf,CAAL;AAA8B,aAApC,CAAqC,OAAOG,CAAP,EAAU;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC3F,iBAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AAAE,gBAAI;AAAEC,qBAAKN,UAAU,OAAV,EAAmBK,KAAnB,CAAL;AAAkC,aAAxC,CAAyC,OAAOG,CAAP,EAAU;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC9F,iBAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,mBAAOC,IAAP,GAAcT,QAAQQ,OAAOL,KAAf,CAAd,GAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,wBAAQQ,OAAOL,KAAf;AAAwB,aAAnD,EAAqDO,IAArD,CAA0DR,SAA1D,EAAqEK,QAArE,CAAtC;AAAuH;AAC/IH,aAAK,CAACN,YAAYA,UAAUa,KAAV,CAAgBhB,OAAhB,EAAyBC,cAAc,EAAvC,CAAb,EAAyDS,IAAzD,EAAL;AACH,KALM,CAAP;AAMH,CAPD;;IAQaO,c,WAAAA,c;AACT,4BAAYC,EAAZ,EAAgBC,cAAhB,EAAgC;AAAA;;AAC5B,aAAKD,EAAL,GAAUA,EAAV;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACH;;;;0CACiB;AACd,mBAAO,KAAKD,EAAL,CAAQE,UAAR,CAAmB,KAAKD,cAAxB,CAAP;AACH;;;6BACIE,M,EAAQ;AACT,mBAAOtB,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0BAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACd,KAAKuB,eAAL,GAChBC,UADgB,CACL,EAAEC,KAAKH,OAAOI,EAAd,EADK,EACeJ,MADf,EACuB,EAAEK,QAAQ,IAAV,EADvB,CADc;;AAAA;AAC7Bb,sCAD6B;;AAGnCQ,yCAASR,OAAOc,GAAP,CAAW,CAAX,CAAT;AAHmC,iEAI5BvB,QAAQC,OAAR,CAAgBgB,MAAhB,CAJ4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AAMH;;;gCACOI,E,EAAI;AACR,gBAAMG,QAAQ;AACVJ,qBAAKC;AADK,aAAd;AAGA,mBAAO,KAAKH,eAAL,GACFO,OADE,CACMD,KADN,CAAP;AAEH;;;iCACQE,G,EAAK;AACV,gBAAMF,QAAQ;AACVJ,qBAAK;AACDO,yBAAKD;AADJ;AADK,aAAd;AAKA,mBAAO,KAAKR,eAAL,GACFU,IADE,CACGJ,KADH,EAEFK,OAFE,EAAP;AAGH;;;6BACIL,K,EAAOM,O,EAAS;AACjB,gBAAMrB,SAAS,KAAKS,eAAL,GACVU,IADU,CACLJ,KADK,EACE,EADF,EACMM,OADN,EAEVD,OAFU,EAAf;AAGA,mBAAOpB,MAAP;AACH;;;;;AAEL","file":"BaseRepository.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class BaseRepository {\n    constructor(db, collectionName) {\n        this.db = db;\n        this.collectionName = collectionName;\n    }\n    getDbCollection() {\n        return this.db.collection(this.collectionName);\n    }\n    save(entity) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.getDbCollection()\n                .replaceOne({ _id: entity.id }, entity, { upsert: true });\n            entity = result.ops[0];\n            return Promise.resolve(entity);\n        });\n    }\n    getById(id) {\n        const query = {\n            _id: id\n        };\n        return this.getDbCollection()\n            .findOne(query);\n    }\n    getByIds(ids) {\n        const query = {\n            _id: {\n                $in: ids\n            }\n        };\n        return this.getDbCollection()\n            .find(query)\n            .toArray();\n    }\n    find(query, options) {\n        const result = this.getDbCollection()\n            .find(query, {}, options)\n            .toArray();\n        return result;\n    }\n}\n//# sourceMappingURL=BaseRepository.js.map"]}