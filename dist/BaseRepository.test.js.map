{"version":3,"sources":["../dist-esnext/BaseRepository.test.js"],"names":["BaseRepository","MONGO_URL","db","collection","save","describe","beforeEach","getDb","getDbCollection","it","entity","id","getById","entityDb","newName","query","email","find","limit","i","testLimit","entitiesDb","length","entities","push","getByIds"],"mappings":"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","file":"BaseRepository.test.js","sourcesContent":["import { equal, ok } from 'ptz-assert';\nimport * as BaseRepository from './index';\nconst MONGO_URL = 'mongodb://localhost:27017/ptz-core-repo';\nvar db;\nvar collection;\nvar save;\ndescribe('BaseRepository', () => {\n    beforeEach(async () => {\n        db = await BaseRepository.getDb(MONGO_URL);\n        collection = BaseRepository.getDbCollection(db, 'test-collection');\n        save = BaseRepository.save(collection);\n    });\n    describe('save', () => {\n        it('insert', async () => {\n            const entity = {\n                id: 'testid'\n            };\n            await save(entity);\n            const entityDb = await BaseRepository.getById(collection, entity.id);\n            ok(entityDb);\n            equal(entityDb.id, entity.id);\n        });\n        it('update', async () => {\n            const entity = {\n                id: 'testid'\n            };\n            entity['name'] = 'teste';\n            await save(entity);\n            const newName = 'teste2';\n            entity['name'] = newName;\n            await save(entity);\n            const entityDb = await BaseRepository.getById(collection, entity.id);\n            ok(entityDb);\n            equal(entityDb.id, entity.id);\n            equal(entityDb['name'], newName);\n        });\n    });\n    describe('find', () => {\n        it('by Email', async () => {\n            const entity = {\n                id: 'testid'\n            };\n            entity['email'] = 'angeloocana@gmail.com';\n            await save(entity);\n            const query = {\n                email: entity['email']\n            };\n            const entityDb = await BaseRepository.find(collection, query, { limit: 1 });\n            ok(entityDb[0]);\n            equal(entityDb[0]['email'], entity['email']);\n        });\n        it('limit by 3', async () => {\n            for (let i = 0; i <= 6; i++) {\n                const entity = {\n                    id: 'test' + i\n                };\n                entity['testLimit'] = true;\n                entity['i'] = i;\n                await save(entity);\n            }\n            const query = {\n                testLimit: true\n            };\n            const entitiesDb = await BaseRepository.find(collection, query, { limit: 3 });\n            equal(entitiesDb.length, 3);\n        });\n    });\n    describe('getByIds', () => {\n        it('get 3 entities by ids', async () => {\n            const entities = [];\n            for (let i = 0; i <= 6; i++) {\n                const entity = {\n                    id: 'test' + i\n                };\n                entity['i'] = i;\n                entities.push(entity);\n                await save(entity);\n            }\n            const entitiesDb = await BaseRepository.getByIds(collection, [\n                entities[0].id, entities[1].id, entities[2].id\n            ]);\n            equal(entitiesDb.length, 3);\n        });\n    });\n});\n//# sourceMappingURL=BaseRepository.test.js.map"]}